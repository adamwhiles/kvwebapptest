name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - master

jobs:
  build_and_deploy_job:
    runs-on: ubuntu-latest
    # Run the entire job in a container so that the Azure CLI login context persists
    container:
      image: node:20-bullseye
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false

      - name: Install Azure CLI
        run: |
          curl -sL https://aka.ms/InstallAzureCLIDeb | bash

      - name: (Optional) Install Azure Static Web Apps CLI extension
        run: |
          # If the "az staticwebapp" commands are not available, uncomment the next line:
          # az extension add --name azure-swa
          echo "Azure Static Web Apps extension (if needed) installed."

      - name: Azure Login
        run: |
          az login --service-principal \
            --username "${{ secrets.AZURE_CLIENT_ID }}" \
            --password "${{ secrets.AZURE_CLIENT_SECRET }}" \
            --tenant "${{ secrets.AZURE_TENANT_ID }}"

      - name: Install Dependencies
        run: npm install

      - name: Build Next.js App
        env:
          KEY_VAULT_URL: ${{ secrets.KEY_VAULT_URL }}
        run: npm run build

      - name: Export Static Site (if applicable)
        # If you use a static export (e.g. next export), generate the static files (commonly to an 'out' folder)
        run: npm run export

      - name: Deploy to Azure Static Web Apps
        run: |
          # This command uses the Azure CLI to upload your static site.
          # Adjust --source-path to the folder that contains your static output (e.g. "./out")
          az staticwebapp upload \
            --name wa-kvwebapptest \
            --resource-group kvwebapptest \
            --source-path ./out
